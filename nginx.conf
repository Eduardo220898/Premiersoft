# ===== APS Healthcare Platform - Nginx Configuration =====
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Otimizações de performance
worker_rlimit_nofile 1024;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # ===== CONFIGURAÇÕES BÁSICAS =====
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # ===== LOGGING =====
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # ===== PERFORMANCE =====
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;
    
    # ===== COMPRESSÃO =====
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;
    
    # ===== SEGURANÇA =====
    server_tokens off;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # ===== SERVER PRINCIPAL =====
    server {
        listen 80;
        listen [::]:80;
        server_name localhost;
        
        # Diretório raiz - arquivos do wwwroot serão servidos na raiz
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # ===== ROTEAMENTO PRINCIPAL =====
        location / {
            try_files $uri $uri/ @fallback;
            
            # Cache para arquivos estáticos
            location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary Accept-Encoding;
            }
        }
        
        # ===== PÁGINAS ESPECÍFICAS =====
        # Landing page como raiz
        location = / {
            try_files /index.html =404;
        }
        
        # Página de login
        location = /login {
            try_files /login.html =404;
        }
        
        location = /login/ {
            try_files /login.html =404;
        }
        
        # Dashboard
        location = /dashboard {
            try_files /dashboard.html =404;
        }
        
        location = /dashboard/ {
            try_files /dashboard.html =404;
        }
        
        # ===== ASSETS E RECURSOS =====
        location /css/ {
            alias /usr/share/nginx/html/css/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location /js/ {
            alias /usr/share/nginx/html/js/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location /images/ {
            alias /usr/share/nginx/html/images/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location /fonts/ {
            alias /usr/share/nginx/html/fonts/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # ===== API ENDPOINTS (FUTURO) =====
        location /api/ {
            # Proxy para API Gateway quando implementado
            # proxy_pass http://api-gateway:5000;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
            
            # Por enquanto, retornar 404
            return 404 "API endpoints não implementados ainda";
        }
        
        # ===== FALLBACK =====
        location @fallback {
            # Se não encontrar arquivo, redirecionar para index.html (SPA behavior)
            try_files /index.html =404;
        }
        
        # ===== HEALTH CHECK =====
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # ===== ERRO 404 CUSTOMIZADO =====
        error_page 404 /index.html;
        
        # ===== OUTROS ERROS =====
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
        
        # ===== BLOQUEAR ARQUIVOS SENSÍVEIS =====
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}